# https://taskfile.dev

version: '3'

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list
    silent: true

  install-uv:
    desc: Install uv package manager
    cmds:
      - cmd: curl -LsSf https://astral.sh/uv/install.sh | sh
        platforms: [darwin, linux]
      - cmd: powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
        platforms: [windows]
    status:
      - command -v uv

  sync:
    desc: Install all project dependencies (including dev)
    deps: [install-uv]
    cmds:
      - uv sync --all-groups

  setup:
    desc: Set up the development environment
    deps: [sync, pre-commit:install]
    cmds:
      - echo "Development environment ready!"

  pre-commit:install:
    desc: Install pre-commit hooks
    cmds:
      - uv run pre-commit install
    status:
      - test -f .git/hooks/pre-commit

  pre-commit:run:
    desc: Run pre-commit on all files
    cmds:
      - uv run pre-commit run --all-files

  format:
    desc: Format code with ruff
    cmds:
      - uv run ruff format .

  lint:
    desc: Lint code with ruff
    cmds:
      - uv run ruff check . --fix

  typecheck:
    desc: Type check with mypy
    cmds:
      - uv run mypy src/

  test:
    desc: Run tests with pytest
    cmds:
      - uv run pytest tests/ -v --cov=src --cov-report=term-missing

  dev:
    desc: Run development server in Docker
    cmds:
      - docker-compose -f docker/docker-compose.yml up -d db
      - docker-compose -f docker/docker-compose.yml up api

  dev:local:
    desc: Run development server locally
    cmds:
      - uv run python -m src.main

  docker:build:
    desc: Build Docker images
    cmds:
      - docker-compose -f docker/docker-compose.yml build

  docker:down:
    desc: Stop Docker containers
    cmds:
      - docker-compose -f docker/docker-compose.yml down

  docker:logs:
    desc: Show Docker logs
    cmds:
      - docker-compose -f docker/docker-compose.yml logs -f

  docker:run:
    desc: Build and run the Docker container standalone
    cmds:
      - docker build -t calendar-api:local -f docker/Dockerfile .
      - docker run --rm -it -p 8000:8000 --name calendar-api-local calendar-api:local

  db:migrate:
    desc: Run database migrations
    cmds:
      - uv run alembic upgrade head

  db:revision:
    desc: Create a new database migration
    cmds:
      - uv run alembic revision --autogenerate -m "{{.CLI_ARGS}}"

  db:downgrade:
    desc: Downgrade database by one revision
    cmds:
      - uv run alembic downgrade -1

  db:history:
    desc: Show migration history
    cmds:
      - uv run alembic history

  db:current:
    desc: Show current database revision
    cmds:
      - uv run alembic current

  ci:
    desc: Run CI tasks
    deps: [lint, typecheck, test, format, pre-commit:run]
