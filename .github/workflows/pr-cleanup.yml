name: PR Environment Cleanup

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: read
  id-token: write  # Required for AWS OIDC
  deployments: write

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.7
  AWS_ROLE_ARN: arn:aws:iam::655593807337:role/github-actions-calendar-api

jobs:
  cleanup:
    name: Cleanup PR Environment
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'main'

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Check if PR environment exists
        id: check
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          ENVIRONMENT="pr-${PR_NUMBER}"

          # Check if state file exists
          if aws s3 ls "s3://calendar-api-terraform-state-655593807337/calendar-api/${ENVIRONMENT}/terraform.tfstate" 2>/dev/null; then
            echo "Environment ${ENVIRONMENT} exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Environment ${ENVIRONMENT} does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init
        if: steps.check.outputs.exists == 'true'
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="key=calendar-api/pr-${{ github.event.pull_request.number }}/terraform.tfstate"

      - name: Terraform Destroy
        if: steps.check.outputs.exists == 'true'
        working-directory: terraform
        run: |
          terraform destroy -auto-approve \
            -var="environment=pr-${{ github.event.pull_request.number }}" \
            -var="doppler_token=${{ secrets.DOPPLER_TOKEN }}" \
            -var="is_ephemeral=true" \
            -var="pr_number=${{ github.event.pull_request.number }}"

      - name: Clean up ECR images
        if: steps.check.outputs.exists == 'true'
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"

          # Delete all images with pr-${PR_NUMBER} tag
          aws ecr batch-delete-image \
            --repository-name calendar-api \
            --image-ids imageTag="pr-${PR_NUMBER}" || true

          # Delete all images with *-pr-${PR_NUMBER} tag pattern
          IMAGE_TAGS=$(aws ecr list-images --repository-name calendar-api \
            --query "imageIds[?contains(imageTag, '-pr-${PR_NUMBER}')].imageTag" \
            --output text || echo "")

          if [[ -n "$IMAGE_TAGS" ]]; then
            for tag in $IMAGE_TAGS; do
              aws ecr batch-delete-image \
                --repository-name calendar-api \
                --image-ids imageTag="$tag" || true
            done
          fi

      - name: Update deployment status
        if: steps.check.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: 'pr-${{ github.event.pull_request.number }}'
            });

            for (const deployment of deployments.data) {
              await github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id,
                state: 'inactive',
                description: 'PR closed - environment destroyed'
              });
            }

      - name: Comment on PR
        if: steps.check.outputs.exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.pull_request.number }},
              body: 'ðŸ§¹ PR environment `pr-${{ github.event.pull_request.number }}` has been destroyed.'
            });
