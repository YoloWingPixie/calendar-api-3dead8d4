name: Production Deployment

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'

permissions:
  contents: read
  id-token: write
  deployments: write

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: calendar-api
  AWS_ROLE_ARN: arn:aws:iam::655593807337:role/github-actions-calendar-api

jobs:
  verify:
    name: Verify And Tag Image
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      image_uri: ${{ steps.verify.outputs.image_uri }}
      sha_to_deploy: ${{ steps.verify.outputs.sha_to_deploy }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - id: login
        uses: aws-actions/amazon-ecr-login@v2

      - id: verify
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}
        run: |
          MERGE_SHA=${{ github.sha }}
          PARENTS=$(git rev-list --parents -n 1 "$MERGE_SHA")
          read -ra SHAS <<< "$PARENTS"
          if [[ ${#SHAS[@]} -ge 3 ]]; then
            SHA_TO_DEPLOY=${SHAS[2]}
          else
            SHA_TO_DEPLOY=$MERGE_SHA
          fi
          SHA_TAG="sha-${SHA_TO_DEPLOY}"
          IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG"
          aws ecr describe-images --repository-name "$ECR_REPOSITORY" --image-ids imageTag="$SHA_TAG" --region "$AWS_REGION" >/dev/null
          echo "image_uri=$IMAGE_URI" >> "$GITHUB_OUTPUT"
          echo "sha_to_deploy=$SHA_TO_DEPLOY" >> "$GITHUB_OUTPUT"

      - run: |
          docker pull ${{ steps.verify.outputs.image_uri }}
          docker tag ${{ steps.verify.outputs.image_uri }} ${{ steps.login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:prod-${{ steps.verify.outputs.sha_to_deploy }}
          docker tag ${{ steps.verify.outputs.image_uri }} ${{ steps.login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ steps.login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:prod-${{ steps.verify.outputs.sha_to_deploy }}
          docker push ${{ steps.login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

  deploy:
    needs: verify
    name: Deploy To Production
    uses: ./.github/workflows/deploy-common.yml
    with:
      environment: prd
      image_uri: ${{ needs.verify.outputs.image_uri }}
      tf_workspace: prod
      is_ephemeral: false
      deployment_description: Production deployment from main branch
    secrets: inherit
